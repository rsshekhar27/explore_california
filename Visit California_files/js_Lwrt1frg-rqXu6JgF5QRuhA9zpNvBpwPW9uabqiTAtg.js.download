(function ($) {
  var isPageNum = 1;
  var refreshTriggered = false;

  /**
   * Insert a views infinite scroll view into the document after AJAX.
   *
   * @param {object} $new_view The new view coming from the server.
   */
  $.fn.infiniteScrollAppendView = function ($newView) {
    var $existing_view = this;
    var $newViewContent = $newView.find('.view-content').children();
    var $newViewPager = $newView.find('.pager--infinite-scroll');

    $existing_view.find('.view-content').append($newViewContent);
    $existing_view.find('.pager--infinite-scroll').replaceWith($newViewPager);

    $existing_view.removeClass(function (index, className) {
      return (className.match (/(^|\s)jquery-once-\S+/g) || []).join(' ');
    });

    Drupal.attachBehaviors($existing_view, Drupal.settings);

    $(document).trigger('infiniteScrollComplete', [$newView, $newViewContent]);
  };

  Drupal.behaviors.vcaInfiniteScroll = {
    attach: function (context, settings) {
      // Restoring previous state
      if (window.history.state != null && typeof window.history.state.content !== 'undefined') {
        var title = document.title;
        var url = window.location.href;
        var vis_index = 0;

        if (window.history.state.currentUrl !== window.history.state.targetUrl) {
          $('.view-homepage-infinite-scroll').html(window.history.state.content);
          isPageNum = window.history.state.currentIsPageNum;

          if (typeof window.history.state.isPageNum !== 'undefined') {
            var i;

            for (i = 0; i < window.history.state.isPageNum; i++) {
              Drupal.behaviors.vcaInfiniteScroll.defineAdSlot(Drupal.settings.vcaAdSlotSettings, ('visitcalifornia_pos' + (i+1)));
              Drupal.behaviors.vcaInfiniteScroll.adPushDisplay(Drupal.settings.vcaAdSlotSettings, ('visitcalifornia_pos' + (i+1)), true);
            }
          }

          // Clear history.
          history.replaceState(null, title, url);

          if (Drupal.settings && Drupal.settings.views && Drupal.settings.views.ajaxViews) {
            $.each(Drupal.settings.views.ajaxViews, function(i, settings) {
              var selector = '.view-dom-id-' + settings.view_dom_id;

              $('body').find('[class*="jquery-once-"]').each(function () {
                $(this).removeClass(function (index, className) {
                  return (className.match (/(^|\s)jquery-once-\S+/g) || []).join(' ');
                });
              });

              // Remove extra loading indicator.
              if ($('.pager--infinite-scroll.pager--infinite-scroll-auto').find('.views_infinite_scroll-ajax-loader').length > 0) {
                $('.pager--infinite-scroll.pager--infinite-scroll-auto .views_infinite_scroll-ajax-loader').remove();
              }

              Drupal.views.instances[i] = new Drupal.views.ajaxView(settings);
            });

            // Rebind everything.
            Drupal.attachBehaviors(document, Drupal.settings);
          }
        }
      }

      // Don't trigger a pushState when pager is clicked, infinite scroll automatically clicks it for each page
      $('a').not($(".pager__item a")).once('jquery-once-history-save').on('click', saveHistory);

      function saveHistory() {
        // var url = window.location.origin + $(this).attr('href');
        var url = window.location.href;
        var title = document.title;
        var documentData = $('.view-homepage-infinite-scroll').html();

        var stateData = {
          currentUrl: window.location.href.replace(/#/g, '').replace(/\/$/, ''),
          targetUrl: window.location.origin + $(this).attr('href').replace(/#/g, '').replace(/\/$/, ''),
          position: $(window).scrollTop(),
          content: documentData,
          currentIsPageNum: isPageNum
        };

        refreshTriggered = false;
        history.pushState(stateData, title, url);
      }

      $('.container-modules').once('jquery-once-infinite', function() {
        if ($('.pager--infinite-scroll .pager__item').find('a').length > 0) {
          $('#block-vca-site-circulation-footer').addClass('has-more-content');
          $('#footer').addClass('has-more-content');
        }
        else {
          $('#block-vca-site-circulation-footer').removeClass('has-more-content');
          $('#footer').removeClass('has-more-content');
        }

        // Display Ad for the first slot.
        Drupal.behaviors.vcaInfiniteScroll.adPushDisplay(Drupal.settings.vcaAdSlotSettings, ('visitcalifornia_pos' + isPageNum));

        $(document).ajaxComplete(function(event, xhr, ajaxSettings) {
          if (ajaxSettings.url.indexOf("/views/ajax") >= 0 && ajaxSettings.data.indexOf("block_infinite_scroll") >= 0) {
            if ($('.pager--infinite-scroll .pager__item').find('a').length > 0) {
              $('#block-vca-site-circulation-footer').addClass('has-more-content');
              $('#footer').addClass('has-more-content');
            }
            else {
              $('#block-vca-site-circulation-footer').removeClass('has-more-content');
              $('#footer').removeClass('has-more-content');
            }

            vcaTrackInfiniteScroll(isPageNum);
            isPageNum++;

            Drupal.behaviors.vcaInfiniteScroll.adPushDisplay(Drupal.settings.vcaAdSlotSettings, ('visitcalifornia_pos' + isPageNum), true);
          }
        });
      });

      /**
       * Send an 'Infinite Scroll' event to Google Analytics with page info
       *
       * ga("send", "hitType", "eventCategory", "eventAction", "eventLabel");
       */
      var vcaTrackInfiniteScroll = function(page_num) {
        var url = window.location.pathname;
        ga('send', 'event', 'Infinite Scroll', url, page_num);
      }
    },

    defineAdSlot: function (adSlotSettings, tagName) {
      if (typeof adSlotSettings[tagName] !== 'undefined') {
        googletag.cmd.push(function() {
          var slot = null;
          var mapping = [];

          // Build size mapping.
          // [728, 0] ,[728, 90].
          // [0, 0], [300, 250].
          adSlotSettings[tagName].breakpoint.forEach(function (value, index) {
            mapping = mapping.concat(googletag.sizeMapping().addSize(value.browser_size, value.ad_sizes).build());
          });

          // Define the ad slot.
          if (adSlotSettings[tagName].outOfPageSlot) {
            slot = googletag.defineOutOfPageSlot(adSlotSettings[tagName].adUnit, adSlotSettings[tagName].placeholderId);
          }
          else {
            slot = googletag.defineSlot(adSlotSettings[tagName].adUnit, adSlotSettings[tagName].size, adSlotSettings[tagName].placeholderId);
          }

          // Add click URL.
          if (adSlotSettings[tagName].clickUrl) {
            slot.setClickUrl(adSlotSettings[tagName].clickUrl);
          }

          // Add pubad service.
          slot.addService(googletag.pubads());

          // Set adSense types.
          if (adSlotSettings[tagName].adsenseAdTypes) {
            slot.set('adsense_ad_types', adSlotSettings[tagName].adsenseAdTypes);
          }

          // Set adSense Channel IDs.
          if (adSlotSettings[tagName].adsenseChannelIds) {
            slot.set('adsense_channel_ids', adSlotSettings[tagName].adsenseChannelIds);
          }

          // Set targeting value.
          adSlotSettings[tagName].targeting.forEach(function (value, index) {
            slot.setTargeting(value.target, value.value);
          });


          slot.defineSizeMapping(mapping);

          googletag.slots[tagName] = slot;
        });
      }
    },

    adPushDisplay: function (adSlotSettings, tagName, refresh) {
      if (typeof adSlotSettings[tagName] !== 'undefined') {
        googletag.cmd.push(function () {
          googletag.display(adSlotSettings[tagName].placeholderId);

          if (refresh === true) {
            googletag.pubads().refresh([googletag.slots[tagName]]);
          }
        });
      }
    }
  };

}(jQuery));
;
(function ($, Drupal, window, document, undefined) {

  Drupal.behaviors.previewModules = {
    attach: function(context, settings) {
      var previewModules = {
        config: {
          selectors: ".preview-rotate-upper, .preview-rotate-lower"
        },

        init: function() {
          previewModules.$modules = $(previewModules.config.selectors);

          if (previewModules.$modules.length) {
            $(window).on("resize", previewModules.resizeHandler);
            $("#interest-filter").on("update", previewModules.changeHandler);

            previewModules.updateModules();
          }
        },

        resizeHandler: function(e) {
          previewModules.updateModules();
        },

        changeHandler: function(e) {
          previewModules.updateModules();
        },

        updateModules: function() {
          previewModules.$modules.each(function() {
            var $module    = $(this),
                $welcome   = $module.find(".welcome:eq(0)"),
                $container = $module.find(".container-preview:eq(0)");

            if ($welcome.length && $container.length) {
              var padding  = $welcome.offset().top - $container.offset().top,
                  property = "padding-top";

              if ($module.hasClass("preview-rotate-lower")) {
                padding  = padding - ($container.innerHeight() - $welcome.innerHeight());
                property = "padding-bottom";
              }

              if (padding != parseInt($module.css(property), 10)) {
                $module.css({
                  "padding-top":    0,
                  "padding-bottom": 0
                });
                $module.css(property, Math.abs(padding));
              }
            }
          });
        }
      };

      previewModules.init();
    }
  };

})(jQuery, Drupal, this, this.document);
;
